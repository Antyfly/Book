Тема: Жизненный цикл программного обеспечения.  

	• Жизненный цикл по -период
времени,  который начинается с момента принятия решения о создании программного продукта и заканчивается в момент его полного изъятия из эксплуатации. 
Модели жизненного цикла по:
	1. Каскадная модель - модель 
разработки ПО, жизненный цикл которой выглядит как поток, последовательно проходящий фазы анализа требований, проектирования, реализации, тестирования, интеграции и поддержки.
В результате завершения шагов формируются промежуточные продукты, которые не могут изменяться на последующих шагах.
Этапы:
	1. Анализ требований;
	2. Проектирование;
	3. Кодирование (программирование);
	4. Тестирование и отладка;
	5. Эксплуатация и сопровождение.
____________________________________________________________
Разработка требований

Проектирование

Реализация

Тестирование

Ввод в действие
____________________________________________________________
Достоинства: 
• Стабильность требований в течение всего жизненного цикла разработки.
• На каждой стадии формируется законченный набор проектной документации, отвечающий критериям полноты и согласованности.
• Определенность и понятность шагов, простота применения модели. 
• Выполняемые в логической последовательности этапы работ позволяют планировать сроки завершения и соответствующие ресурсы.
Недостатки: 
• Сложность четкого формулирования требований и невозможность их динамического изменения на протяжении пока идет полный жизненный цикл.
• Низкая гибкость управления проекта.
• возвращение к предыдущим шагам для решения проблем. приводит к увеличению затрат и нарушения графика работ.
• непригодность промежуточного продукта для использования + пользователи не могут оценить качество продукта.
• невозможность гибкого моделирования уникальных систем.
• позднее обнаружение проблем.
• недостаточное участие пользователя в создании системы.
• у пользователя нет возможности постепенно привыкнуть к системе.
• каждая фаза явл. предпосылкой для выполнения последующих действий, что превращает такой метод в рискованный выбор для систем, не имеющих аналог т.к. он не поддается гибкому моделированию.
Область применения каскадной модели:
• Неизменяемые и понятные
требованиями реализацией и техническими методиками.
•  Тип построения системы или продукта уже был ранее разработан.
• При разработке проекта, связанного с созданием и выпуском новой версии уже существующего продукта или системы.
• При разработке проекта, связанного с переносом уже существующего продукта или системы на новую платформу.

	2. Инкрементная модель—разработка программного обеспечения с линейной последовательностью стадий, но в несколько инкрементов (версий)._________________________________________________________
Разработка требований

Проектирование

Реализация

Тестирование

Ввод в действие
____________________________________________________________

Достоинства: 
	• Затраты уменьшаются и документация.
	• Легче получить отзывы от клиента о проделанной работе.
	• У клиента есть возможность быстро получить и освоить П.О.
	
Недостатки:
	• Документация постоянно переписывается.
	• Постоянное изменение нарушает структуру системы.
	
3.Спиральная модель - на каждом ветке спирали выполняется создание очередной версии продукта, уточняются требования проекта, определяющие качество.

Достоинства:
	• Можно показать быстрее пользователям работоспособный продукт.
	• Возможность гибкого проектирования и допускает изменение требований при разработке п.о.
	• Позволяет получить более надежную и устойчивую систему.
	• Пользователи могут активно принимать участие при планировании.
	• Уменьшаются риски заказчика.
	
Недостатки: 
	• Модель может оказаться дорогостоящей.
	• МБ затруднено применение разработчиками, менеджерами и заказчиками.
	• Спираль может продолжаться до бесконечности.